# ===================== PACKAGES AND LIBRARIES ==========================

install.packages("psych")

library(dplyr)
library(tibble)
library(tidyverse)
library(lubridate)
#library(pwt)
library(tidyr)
library(purrr)
library(broom)
#library(pander)


# ===================== DOWNLOAD DATA ==========================
# Author: Werley Cordeiro
# werleycordeiro@gmail.com
# https://github.com/werleycordeiro/Brazil_Yield_Curve/blob/master/DI-Pre.R


# Function
yieldsbr = function(Initial_Date,Final_Date,Maturities){
 # Packages
 packages = c("rvest","httr","functional")
 new.packages = packages[!(packages %in% installed.packages()[,"Package"])]
 if(length(new.packages)) install.packages(new.packages)
 suppressMessages(library(rvest))
 suppressMessages(library(httr))
 suppressMessages(library(functional))

 dates = format(seq(as.Date(Initial_Date), as.Date(Final_Date), 'day'), format="%d-%m-%Y", tz="UTC")
 mat = matrix(NA,length(dates),length(Maturities))
 # Scraping
 for(i in 1:length(dates)){
 	di = GET(url = "https://www2.bmf.com.br/pages/portal/bmfbovespa/lumis/lum-taxas-referenciais-bmf-ptBR.asp",query = list(Data = dates[i]))
	data = read_html(di) %>% html_nodes("table") %>% html_nodes("td") %>% html_text()
	if(length(data)==0){i=i
	}else{
	data = data.frame(matrix(data, ncol=3, byrow=TRUE))
	data[,2] = as.numeric(gsub(",", ".", gsub("\\.", "", data[,2])))
	data[,3] = as.numeric(gsub(",", ".", gsub("\\.", "", data[,3])))
 # Spline
	t = as.integer(as.matrix(data[,1]))/21
	y = as.numeric(as.matrix(data[,2]))
	spl = smooth.spline(y ~ t)
	t.new = Maturities
	new = predict(spl, t.new)
	mat[i,] = new$y
	pb = txtProgressBar(min = (1/length(dates)), max = length(dates), style = 3)
    	setTxtProgressBar(pb,i)
		}
	}
 colnames(mat) = paste0("M",Maturities)
 rownames(mat) = dates
 mat = mat[apply(mat, 1, Compose(is.finite, all)),]
 return(mat)
}

Initial_Date = '2006/01/01' # Available from 2003/08/08. YYYY/MM/DD 
Final_Date = '2022/08/08'
Maturities = c(1:25)

yields_daily_100 = yieldsbr(Initial_Date=Initial_Date,Final_Date=Final_Date,Maturities=Maturities)
yields_daily_100

yields_daily_clmn<-as.data.frame(rownames_to_column(yields_daily_100/100)) # se nÃ£o funcionar, usar esse: yields_daily_clmn<-as.data.frame(rownames_to_column(as.data.frame(yields_daily_100/100)))
colnames(yields_daily_clmn)[1]<-"DATE"

plot(colMeans(yields))


#======================== EXCESS RETURNS - EXPECTATION HIPOTHESIS ========================


last_days<-as.data.frame(as.Date.POSIXct(matrix(c(1138665600, 1140739200, 1143763200, 1146182400, 1149033600, 1151625600, 1154304000, 1156982400, 1159488000, 1162252800, 1164844800, 1167264000, 1170201600, 1172620800, 1175212800, 1177891200, 1180569600, 1183075200, 1185840000, 1188518400, 1190937600, 1193788800, 1196380800, 1198800000, 1201737600, 1204243200, 1206921600, 1209513600, 1212105600, 1214784000, 1217462400, 1219968000, 1222732800, 1225411200, 1227830400, 1230595200, 1233273600, 1235692800, 1238457600, 1241049600, 1243555200, 1246320000, 1248998400, 1251676800, 1254268800, 1256860800, 1259539200, 1262131200, 1264723200, 1267142400, 1269993600, 1272585600, 1275264000, 1277856000, 1280448000, 1283212800, 1285804800, 1288310400, 1291075200, 1293667200, 1296432000, 1298851200, 1301529600, 1304035200, 1306800000, 1309392000, 1311897600, 1314748800, 1317340800, 1320019200, 1322611200, 1325116800, 1327968000, 1330473600, 1333065600, 1335744000, 1338422400, 1340928000, 1343692800, 1346371200, 1348790400, 1351641600, 1354233600, 1356652800, 1359590400, 1362009600, 1364428800, 1367280000, 1369958400, 1372377600, 1375228800, 1377820800, 1380499200, 1383177600, 1385683200, 1388361600, 1391126400, 1393545600, 1396224000, 1398816000, 1401408000, 1404086400, 1406764800, 1409270400, 1412035200, 1414713600, 1417132800, 1419897600, 1422576000, 1424995200, 1427760000, 1430352000, 1432857600, 1435622400, 1438300800, 1440979200, 1443571200, 1446163200, 1448841600, 1451433600, 1454025600, 1456704000, 1459382400, 1461888000, 1464652800, 1467244800, 1469750400, 1472601600, 1475193600, 1477872000, 1480464000, 1482969600, 1485820800, 1487894400, 1490918400, 1493337600, 1496188800, 1498780800, 1501459200, 1504137600, 1506643200, 1509408000, 1512000000, 1514419200, 1517356800, 1519776000, 1522281600, 1525046400, 1527638400, 1530230400, 1532995200, 1535673600, 1538092800, 1540944000, 1543536000, 1545955200, 1548892800, 1551312000, 1553817600, 1556582400, 1559260800, 1561680000, 1564531200, 1567123200, 1569801600, 1572480000, 1574985600, 1577664000, 1580428800, 1582848000, 1585612800, 1588204800, 1590710400, 1593475200, 1596153600, 1598832000, 1601424000, 1604016000, 1606694400, 1609286400, 1611878400, 1614297600, 1617148800, 1619740800, 1622419200, 1625011200, 1627603200, 1630368000, 1632960000, 1635465600, 1638230400, 1640822400, 1643587200, 1645747200, 1648684800, 1651190400, 1653955200, 1656547200, 1659052800),199,1),tz="UTC"))
last_days<-as.data.frame(as.matrix(last_days))
last_days<-as.data.frame(as.Date(last_days[,1]))
colnames(last_days)[1]<-"DATE"

dates_daily<-as.data.frame(as.Date(yields_daily_clmn$DATE, "%d - %m - %Y"))

yields_daily_asDate<-bind_cols(dates_daily,yields_daily_clmn)
yields_daily_asDate<-as.data.frame(yields_daily_asDate[,-2])
colnames(yields_daily_asDate)[1]<-"DATE"

yields_asDate<-inner_join(last_days,yields_daily_asDate, by = "DATE")

yields_daily<-column_to_rownames(yields_daily_asDate,var = "DATE")
yields<-column_to_rownames(yields_asDate,var = "DATE")

yields_fin<-yields[2:199, 1:23] 
yields_ini<-yields[1:198, 2:24] # t1=jan/06, h1=M2

mat_fin.rep<-t(as.data.frame(rep(as.data.frame(Maturities[1:23])[1],198)))
mat_ini.rep<-t(as.data.frame(rep(as.data.frame(Maturities[2:24])[1],198)))
rf.rep<-as.data.frame(rep(as.data.frame(yields[1:198,1])[1],23))
rownames(mat_fin.rep)<-rownames(yields_fin)
rownames(mat_ini.rep)<-rownames(yields_ini)
rownames(rf.rep)<-rownames(yields_ini)
colnames(mat_fin.rep)<-colnames(yields_fin)
colnames(mat_ini.rep)<-colnames(yields_ini)
colnames(rf.rep)<-colnames(yields_ini)

rf<- as.matrix(rf.rep[,1]) 	#risk free rate
colnames(rf)<-"risk_free"
rownames(rf)<-rownames(yields_ini)

ytm_fin<-as.data.frame(yields_fin*mat_fin.rep)
ytm_ini<-as.data.frame(yields_ini*mat_ini.rep)
rownames(ytm_fin)<-rownames(yields_fin)
colnames(ytm_fin)<-colnames(yields_fin)
rownames(ytm_ini)<-rownames(yields_ini)
colnames(ytm_ini)<-colnames(yields_ini)

ytm_fin_6M<-as.matrix(cbind(ytm_fin[,3],ytm_fin[,6],ytm_fin[,9],ytm_fin[,12],ytm_fin[,15],ytm_fin[,18]))
ytm_ini_6M<-as.matrix(cbind(ytm_ini[,3],ytm_ini[,6],ytm_ini[,9],ytm_ini[,12],ytm_ini[,15],ytm_ini[,18]))

ytmfin_xphyp<-ytm_ini-rf # expected ytm_fin
rownames(ytmfin_xphyp)<-rownames(ytm_fin)
colnames(ytmfin_xphyp)<-colnames(ytm_fin)

ytmfin_xphyp_6M<-as.matrix(cbind(ytmfin_xphyp[,3],ytmfin_xphyp[,6],ytmfin_xphyp[,9],ytmfin_xphyp[,12],ytmfin_xphyp[,],ytmfin_xphyp[,18]))

lm_B1A6<-lm(formula = ytm_fin_6M ~ ytmfin_xphyp_6M)

# ====== 1 month return

r_h1mo<- ytm_ini - ytm_fin 	#return rate for holding the bond for 1 month
rownames(r_h1mo)<-rownames(ytm_fin)
colnames(r_h1mo)<-colnames(ytm_fin)

r_h1mo_6M<-as.matrix(cbind(r_h1mo[,3],r_h1mo[,6],r_h1mo[,9],r_h1mo[,12],r_h1mo[,15],r_h1mo[,18]))

lm_r1h1mo<-lm(r_h1mo_6M ~ rf) 

#summary(lm_r1h1mo)


# ===================== PCA ==========================


f_draw_factor_loading<-function(m.loadings,var,title){
    
    x11(width=16/3,height=5);
    matplot(mat,m.loadings,type="l",xaxt="n",lwd=5,lty=1,
            main=title,col=rainbow(5),ylim=c(-0.6,0.6),
            xlab="Maturity (month)",ylab="Factor loadings")
    legend('bottomright',max(m.loadings),col=rainbow(5),lty=1,lwd=3,
           legend=paste0(c("PC1","PC2","PC3","PC4","PC5"),var))
    axis(1,mat,mat)
}


mat<-Maturities


pca_yields<-princomp(yields_daily)
f_draw_factor_loading(pca_yields$loadings[,1:5],
                      round(100*pca_yields$dev[1:5]^2/sum(pca_yields$dev^2),2),
                      "Yields level PCA - princomp()")
        
        
pc_scores_daily<-as.data.frame(pca_yields$scores)

pc_loadings_daily<-as.data.frame(unclass(pca_yields$loadings))


lines(Maturities,                    # Draw first time series
       pca_loadings_daily$Comp.1,
       type = "l",
       col = 2)
lines(Maturities,                    # Draw first time series
       pca_loadings_daily$Comp.2,
       type = "l",
       col = 3)
lines(Maturities,                    # Draw first time series
       pca_loadings_daily$Comp.3,
       type = "l",
       col = 4)
 lines(Maturities,                   # Draw first time series
       pca_loadings_daily$Comp.4,
       type = "l",
       col = 5)
 lines(Maturities,                   # Draw first time series
       pca_loadings_daily$Comp.5,
       type = "l",
       col = 6)
 legend("topright",                  # Add legend to plot
        c("PC1", "PC2", "PC3", "PC4", "PC5"),
        lty = 1,
        col = 2:4)


# ===================== LM() EXCESS RETURN ~ PCA ==========================


r_xs<- r_h1mo - rf.rep       # excess returns
rownames(r_xs)<-rownames(ytm_fin)
colnames(r_xs)<-colnames(ytm_fin)

r_xs_6M<-as.matrix(cbind(r_xs)[c(3,6,9,12,15,18)])

pc_scores_daily_clmn<-cbind(dates_asDate,rownames_to_column(pc_scores_daily))
pc_scores_daily_clmn<-pc_scores_daily_clmn[,-2]
colnames(pc_scores_daily_clmn)[1]<-"DATE"

pc_scores<-inner_join(last_days_asDate,pc_scores_daily_clmn, by = "DATE")
pc_scores<-column_to_rownames(inner_join(last_days_asDate,pc_scores_daily_clmn, by = "DATE"),var = "DATE")

pc5_ini<-as.matrix(pc_scores[1:198,1:5])

lm_pc5<-lm(r_xs_6M ~ pc5_ini)

#summary(lm_pc5)


# ===================== ADRIAN 3 STEPS ==========================
#https://www.rdocumentation.org/packages/vars/versions/1.5-6/topics/VAR
library("vars")


var1_pc5 <- VAR(pc_scores[,1:5], p = 1, type = "const",ic = "SC")

Sigma_hat<-crossprod(as.matrix(residuals(var1_pc5)))/192 # Covariance matrix of residuals

X__transp<-as.matrix(pca_yields_scores_lastday)[1:198,1:5]
V_transp<-as.matrix(residuals(var1_pc5))

#====== estimando parÃ¢metros Adrian (14):

lm_A14<-lm(r_xs_6M ~ V_transp[1:198,1:5] + X__transp[1:198,1:5])

E_hat<-as.matrix(lm_A14$residuals)
sig2_hat<-sum(diag((crossprod((E_hat)))))/(192*6)

B_ast<-matrix(
	cbind(
             crossprod(t(lm_A14$coefficients[2:6,1]),t(lm_A14$coefficients[2:6,1])),
             crossprod(t(lm_A14$coefficients[2:6,2]),t(lm_A14$coefficients[2:6,2])),
             crossprod(t(lm_A14$coefficients[2:6,3]),t(lm_A14$coefficients[2:6,3])),
             crossprod(t(lm_A14$coefficients[2:6,4]),t(lm_A14$coefficients[2:6,4])),
             crossprod(t(lm_A14$coefficients[2:6,5]),t(lm_A14$coefficients[2:6,5])),
             crossprod(t(lm_A14$coefficients[2:6,6]),t(lm_A14$coefficients[2:6,6]))
	     )
	,25,6)

#============== lambda0_hat ============

beta_hat<-matrix(cbind(c(
	    lm_A14$coefficients[2:6,1],
	    lm_A14$coefficients[2:6,2],
	    lm_A14$coefficients[2:6,3],
	    lm_A14$coefficients[2:6,4],
	    lm_A14$coefficients[2:6,5],
	    lm_A14$coefficients[2:6,6])
		),5,6)

c_hat<-matrix(cbind(c(
	    lm_A14$coefficients[7:11,1],
	    lm_A14$coefficients[7:11,2],
	    lm_A14$coefficients[7:11,3],
	    lm_A14$coefficients[7:11,4],
	    lm_A14$coefficients[7:11,5],
	    lm_A14$coefficients[7:11,6])
		),5,6)

lambda1_hat<-as.data.frame(crossprod(solve(crossprod(t(beta_hat),t(beta_hat))),crossprod(t(beta_hat),t(c_hat))))

#============== lambda0_hat ============

vec_Sigma<-as.matrix(as.vector(Sigma_hat))
Basc_Sigma<-crossprod(B_ast,vec_Sigma)
betabeta_inv<- solve(crossprod(t(beta_hat),t(beta_hat)))
#betabeta<- crossprod(t(beta_hat),t(beta_hat))

a_hat<-matrix(cbind(c(
	    lm_A14$coefficients[1,1],
	    lm_A14$coefficients[1,2],
	    lm_A14$coefficients[1,3],
	    lm_A14$coefficients[1,4],
	    lm_A14$coefficients[1,5],
	    lm_A14$coefficients[1,6])
		),1,6)

library("psych")
sigmasq_hat<-tr(crossprod(E_hat,E_hat))/(6*198)
i_6<-as.data.frame(rep(1, 6))
sigmasq6_hat<-sigmasq_hat*i_6

lambda0_hat <- as.data.frame(crossprod(betabeta_inv, crossprod(t(beta_hat),as.matrix( t(a_hat) + Basc_Sigma/2 + sigmasq6_hat))))


#============================ MSPE ============================


#=== no-change (random walk)
#maybe i should random walk the price (or the yield) instead of r_xs

E_rxs_rw<-as.data.frame(r_xs_6M[1:197,])
rxs_rw<-as.data.frame(r_xs_6M[2:198,])
MSPE_rw<-mean(as.matrix(rxs_rw-E_rxs_rw)^2)
MSPE_rw

#=== expectation hypothesis


E_rxs_xphyp<-0
MSPE_xphyp<-mean(as.matrix(r_xs_6M)^2)
MSPE_xphyp

#=== r_xs pc5

pc5_ini<-as.matrix(pc_scores[1:198,1:5])

lm_pc5_alpha_hat<-t(lm_pc5$coefficients[1,])
lm_pc5_beta_hat<-t(lm_pc5$coefficients[2:6,])

i_198<-as.data.frame(rep(1, 198))

E_rxs_pc5<-as.data.frame(t(crossprod(lm_pc5_alpha_hat,t(i_198))+crossprod(lm_pc5_beta_hat,t(PC5_t))))

MSPE_pc5<-mean(as.matrix(r_xs_6M-E_rxs_pc5)^2)
MSPE_pc5

#=== adrian 3 steps

E_rxs_a14<-as.data.frame(t(crossprod(a_hat,t(i_198))+crossprod(as.matrix(beta_hat),t(V_transp))+crossprod(as.matrix(c_hat),t(X__transp))))

MSPE_adrian3steps<-mean(as.matrix(r_xs_6M-E_rxs_a14)^2)
MSPE_adrian3steps




#------------------------------------------------

#=============== VIEW() SUMMARY() #PDF ==============

#------------------------------------------------


#======== EXCESS RETURNS - EXPECTATION HIPOTHESIS ===========


summary_lm_B1A6_M18<-summary(lm_B1A6_M18)
summary_lm_B1A6_M15<-summary(lm_B1A6_M15)
summary_lm_B1A6_M12<-summary(lm_B1A6_M12)
summary_lm_B1A6_M9<-summary(lm_B1A6_M9)
summary_lm_B1A6_M6<-summary(lm_B1A6_M6)
summary_lm_B1A6_M3<-summary(lm_B1A6_M3)

lmB1A6_tbl1<-as.data.frame(cbind(t(data.frame(summary_lm_B1A6_M3$coefficients,summary_lm_B1A6_M6$coefficients,summary_lm_B1A6_M9$coefficients,summary_lm_B1A6_M12$coefficients,summary_lm_B1A6_M15$coefficients,summary_lm_B1A6_M18$coefficients)[1,seq(1,24,by=4)]),t(data.frame(summary_lm_B1A6_M3$coefficients,summary_lm_B1A6_M6$coefficients,summary_lm_B1A6_M9$coefficients,summary_lm_B1A6_M12$coefficients,summary_lm_B1A6_M15$coefficients,summary_lm_B1A6_M18$coefficients)[1,seq(4,24,by=4)]),t(data.frame(,summary_lm_B1A6_M3$coefficients,summary_lm_B1A6_M6$coefficients,summary_lm_B1A6_M9$coefficients,summary_lm_B1A6_M12$coefficients,summary_lm_B1A6_M15$coefficients,summary_lm_B1A6_M18$coefficients)[2,seq(1,24,by=4)]),t(data.frame(summary_lm_B1A6_M3$coefficients,summary_lm_B1A6_M6$coefficients,summary_lm_B1A6_M9$coefficients,summary_lm_B1A6_M12$coefficients,summary_lm_B1A6_M15$coefficients,summary_lm_B1A6_M18$coefficients)[2,seq(4,24,by=4)]),t(data.frame(summary_lm_B1A6_M3$adj.r.squared,summary_lm_B1A6_M6$adj.r.squared,summary_lm_B1A6_M9$adj.r.squared,summary_lm_B1A6_M12$adj.r.squared,summary_lm_B1A6_M15$adj.r.squared,summary_lm_B1A6_M18$adj.r.squared))))
row.names(lmB1A6_tbl1)<-c("M3","M6","M9","M12","M15","M18")
colnames(lmB1A6_tbl1)<-c("Intercept","P_value","Beta","P_value","R_squared")

View(lmB1A6_tbl1)

# ===================== LM() EXCESS RETURN ~ PCA ==========================


summary_lm_PC5_M18<-summary(lm_pc5_M18)
summary_lm_PC5_M15<-summary(lm_pc5_M15)
summary_lm_PC5_M12<-summary(lm_pc5_M12)
summary_lm_PC5_M9<-summary(lm_pc5_M9)
summary_lm_PC5_M6<-summary(lm_pc5_M6)
summary_lm_PC5_M3<-summary(lm_pc5_M3)

# substituir lm_M1 por lm_pc5_M1:
#lm_rxs_pc5_tbl1<-as.data.frame(cbind(t(data.frame(summary_lm_M1$coefficients ,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[1,seq(1,24,by=4)]),t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[1,seq(4,24,by=4)]),t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[2,seq(1,24,by=4)]),t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[2,seq(4,24,by=4)]),
#t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[3,seq(1,24,by=4)]),t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[3,seq(4,24,by=4)]),
#t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[4,seq(1,24,by=4)]),t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[4,seq(4,24,by=4)]),
#t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[5,seq(1,24,by=4)]),t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[5,seq(4,24,by=4)]),
#t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[6,seq(1,24,by=4)]),t(data.frame(summary_lm_M1$coefficients,summary_lm_M3$coefficients,summary_lm_M6$coefficients,summary_lm_M9$coefficients,summary_lm_M12$coefficients,summary_lm_M18$coefficients)[6,seq(4,24,by=4)]), t(data.frame(summary_lm_M1$adj.r.squared,summary_lm_M3$adj.r.squared,summary_lm_M6$adj.r.squared,summary_lm_M9$adj.r.squared,summary_lm_M12$adj.r.squared,summary_lm_M18$adj.r.squared))))
#colnames(lm_rxs_pc5_tbl1)<-c("Intercept","P_value","Beta_PC1","P_value","Beta_PC2","P_value","Beta_PC3","P_value","Beta_PC4","P_value","Beta_PC5","P_value","R_squared")
#row.names(lm_rxs_pc5_tbl1)<-c("M2","M3","M6","M9","M12","M18")

#View(lm_rxs_pc5_tbl1)


# ===================== PRICES OF RISK PARAMETERS ==========================


lambdas<-as.data.frame(c(lambda0_hat,lambda1_hat))
rownames(lambdas)<-c("PC1","PC2","PC3","PC4","PC5")
colnames(lambdas)<-c("lmbd_0","lmbd_1.1","lmbd_1.2","lmbd_1.3","lmbd_1.4","lmbd_1.5")

View(lambdas)

# ===================== TABLES IN .PDF ==========================


#install.packages("gridExtra")
#library("gridExtra")

#pdf("lmB1A6_tbl1.pdf", height=4, width=12)
#grid.table(lmB1A6_tbl1)
#dev.off()

#pdf("lm_rxs_pc5_tbl1.pdf", height=4, width=24)
#grid.table(lm_rxs_pc5_tbl1)
#dev.off()

#pdf("lambdas.pdf", height=4, width=12)
#grid.table(lambdas)
#dev.off()
